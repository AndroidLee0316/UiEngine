apply plugin: 'com.android.application'

def toJavaStringValue(String value) {
    return "\"" + value + "\""
}


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        applicationId "com.pingan.smt.template"
        multiDexEnabled true
        ndk {
            abiFilter "armeabi-v7a"
        }

        /**
         * ARouter 路由配置
         */
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //ARouter 路由配置
    annotationProcessor "com.alibaba:arouter-compiler:${rootProject.ext.arouterCompiler}"
    //    // 当前app module使用到了dbflow的注解【annotationProcessor好像不能gradle层层传递】

    //    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:${rootProject.ext.dbflowVersion}"
    api "com.zxs.lib:safe:1.0.0"
//    api "com.pasc.lib:websocket:${rootProject.ext.aarLibWebSocket}"
    api "com.zxs.business:ota:1.0.0"
    api "com.zxs.business:ota:1.0.0"
    api("com.zxs.lib:ota:1.0.0") {
        force = true
    }
    api "com.zxs.business:nearbylife:1.0.0"
    api "com.zxs.business:emrgency:1.0.0"
    api 'com.github.AndroidLee0316:zxs_net:support_2.0.0'
    api "com.zxs.lib:switch:1.0.0"
    api "com.zxs.lib:openplatform:1.0.0"
    api "com.zxs.lib:behavior:1.0.0"
    if (isMavenBuild == 'false') {
        api project(':BusinessWorkspace')
        api project(':BusinessGovAffair')
        api project(':BusinessLifePage')
        api project(':BusinessMine')
    } else {
        api "com.pasc.business:workspace:$BUSINESS_WORKSPACE_VERSION"
        api "com.pasc.business:govAffair:${BUSINESS_GOVAFFAIR_VERSION}"
        api "com.pasc.business:LifePage:$BUSINESS_LIFEPAGE_VERSION"
        api "com.pasc.business:BusinessMine:$BUSINESS_MINE_VERSION"
    }
//    api  "com.zxs.lib:lbs-gaode:1.0.0"

    implementation "com.zxs.lib:share:1.0.0"
    api  "com.zxs.lib:statistics:1.0.0"
    api "com.zxs.lib:storage:1.0.0"
    api(LIB_WIDGET) {
        force = true
    }
    api BUSINESS_USER
}
