// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  apply from: 'module_config.gradle'
  repositories {
    google()
    maven{ url 'http://maven.aliyun.com/nexus/content/repositories/central/'}
    jcenter(){url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    maven { url 'E://zxsCode/maven' }
    maven { url uri('./app/repo') }
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:3.3.3'
    classpath 'com.bonree.agent.android:bonree:2.2.1.7'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.0"
  }
}

allprojects {
  repositories {
    google()
    maven{ url 'http://maven.aliyun.com/nexus/content/repositories/central/'}
    jcenter(){url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    maven { url 'E://zxsCode/maven' }
    maven { url "https://jitpack.io" }
    maven { url uri('./app/repo') }
    mavenCentral()


  }
}


task clean(type: Delete) {
  delete rootProject.buildDir
}



//task actionUploadAllArchives() {
//
//  def taskPaths = [];
//  taskPaths.add('LibUILayout')
//  taskPaths.add('LibWorkspaceHandler')
//  taskPaths.add('BusinessWorkspace')
//  //taskPaths.add('BusinessLifePage')
//  //taskPaths.add('BusinessGovAffair')
//  taskPaths.add('BusinessMine')
//  def taskSize = taskPaths.size();
//  for (i in 0..taskSize - 1) {
//    def newValue = ":${taskPaths[i]}:uploadArchives"
//    println newValue
//    taskPaths[i] = newValue
//  }
//
//  dependsOn taskPaths
//
//  // 列表的顺序就是执行顺序
//  for (i in 1..taskSize - 1) {
//    def pathBefore = taskPaths[i]
//    def pathAfter = taskPaths[i - 1]
//    tasks.findByPath(pathBefore).mustRunAfter(pathAfter)
//  }
//}